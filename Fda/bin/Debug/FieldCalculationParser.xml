<?xml version="1.0"?>
<doc>
<assembly>
<name>
FieldCalculationParser
</name>
</assembly>
<members>
<member name="T:FieldCalculationParser.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:FieldCalculationParser.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:FieldCalculationParser.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="M:FieldCalculationParser.Parser.Scan">
 <summary>
 Advances to the next fully validated token.
 </summary>
 <remarks></remarks>
</member>
<member name="M:FieldCalculationParser.HeaderContainer.SetColNums(System.Collections.Generic.List{System.String})">
 <summary>
 this must be called before set type
 </summary>
 <param name="uniqueheaderNames"></param>
 <remarks></remarks>
</member>
<member name="M:FieldCalculationParser.Scanner.SingleSymbol(System.Char,FieldCalculationParser.TokenEnum)">
 <summary>
 this creates a new token to go into the tree.
 </summary>
 <param name="c">the input that should be a token</param>
 <param name="tok">the equivalent token</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:FieldCalculationParser.Scanner.DoubleSymbol(System.Char,System.Char,FieldCalculationParser.TokenEnum)">
 <summary>
 This is trying to create tokenenums based on predicted symbols 
 </summary>
 <param name="first">the first symbol that has been discovered</param>
 <param name="second">the predicted symbol</param>
 <param name="tok">the anticipated token</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:FieldCalculationParser.Scanner.SingleOrDoubleSymbol(System.Char,System.Char,FieldCalculationParser.TokenEnum,FieldCalculationParser.TokenEnum)">
 <summary>
 This is trying to create a Token for the inequality operation(lt,gt,lte,gte)
 </summary>
 <param name="first">current character</param>
 <param name="second">"="</param>
 <param name="tok1">one of TokenEnum types ("LT" or "GT")</param>
 <param name="tok2">one of TokenEnum types ("LE" or "GE")</param>
 <returns>Token</returns>
 <remarks></remarks>
</member>
</members>
</doc>

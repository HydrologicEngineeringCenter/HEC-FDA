<?xml version="1.0"?>
<doc>
<assembly>
<name>
LifeSimGIS
</name>
</assembly>
<members>
<member name="T:LifeSimGIS.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:LifeSimGIS.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:LifeSimGIS.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="M:LifeSimGIS.LineFeature.NearestLineFromPoint(LifeSimGIS.PointD,LifeSimGIS.PointD@)">
 <summary>
 Calculates the distance, nearest part index, and preceeding point index of the intersecting line segment.
 </summary>
 <param name="pt">The point to be tested</param>
 <param name="NearestPointOnLine">The point on the line that is closest to the test point.</param>
 <returns>Distance</returns>
 <remarks>Created 10/07/2015 by Woodrow Fields</remarks>
</member>
<member name="M:LifeSimGIS.LineFeature.NearestLineFromPoint(LifeSimGIS.PointD,LifeSimGIS.PointD@,System.Int32@,System.Int32@)">
 <summary>
 Calculates the distance, nearest part index, and preceeding point index of the intersecting line segment.
 </summary>
 <param name="pt">The point to be tested</param>
 <param name="NearestPointOnLine">The point on the line that is closest to the test point.</param>
 <param name="PartIndex">The part index that will be returned as being the part closest to the point.</param>
 <param name="PreceedingPointIndex">The point index on the return part that is before the intersecting location of the point</param>
 <returns>Distance</returns>
 <remarks>Created 10/07/2015 by Woodrow Fields</remarks>
</member>
<member name="M:LifeSimGIS.LineFeature.NearestLineFromPoint(LifeSimGIS.PointD,LifeSimGIS.PointD@,System.Int32@,System.Int32@,System.Double@)">
 <summary>
 Calculates the distance, nearest point on the line feature, nearest part index, intersecting point fraction distance, and preceeding point index of the intersecting line segment.
 </summary>
 <param name="pt">The point to be tested</param>
 <param name="NearestPointOnLine">The point on the line that is closest to the test point.</param>
 <param name="PartIndex">The part index that will be returned as being the part closest to the point.</param>
 <param name="PreceedingPointIndex">The point index on the return part that is before the intersecting location of the point</param>
 <param name="FractionDistanceAlongFeature">The fraction distance from the start of the line feature to the intersection point closest to the test point.</param>
 <returns>Distance</returns>
 <remarks>Created 11/02/2015 by Woodrow Fields</remarks>
</member>
<member name="M:LifeSimGIS.LineFeature.GetPositionLocation(System.Double)">
 <summary>
 Returns a point on the line representing the percent distance from the start of the line.
 </summary>
 <param name="FractionPosition">Decimal value representing the position requested.  Value should be between 0 and 1.</param>
 <returns>Point on the line that is of the specified distance from the start.</returns>
 <remarks></remarks>
</member>
<member name="M:LifeSimGIS.LineFeature.GetPositionLocation(System.Double,System.Int32@,System.Int32@)">
 <summary>
 Returns a point on the line representing the percent distance from the start of the line.
 </summary>
 <param name="FractionPosition">Decimal value representing the position requested.  Value should be between 0 and 1.</param>
 <param name="PartIndex">Returns the index of the line part that the position stopped on.</param>
 <param name="PreviousPointIndex">Returns the point index on the part that preceeds the position location.</param>
 <returns>Point on the line that is of the specified distance from the start.</returns>
 <remarks></remarks>
</member>
<member name="M:LifeSimGIS.LineFeature.Simplify(System.Double)">
 <summary>
 Douglas Peucker Simplification
 </summary>
 <param name="tolerance">the number of units defined by the projection that you are willing to sacrifice between
  any three points where the distance is measured as the height of a normal line through point3 from a line
  connecting point1 and point 3</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:LifeSimGIS.LineFeature.Simplify(System.Double,System.Int32)">
 <summary>
 Lang Simplification
 </summary>
 <param name="Tolerance">a tolerance variable expressed as a minimum angle between the current point and a look ahead point</param>
 <param name="lookahead">the number of points to look ahead</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:LifeSimGIS.LineFeature.Simplify(System.Int32)">
 <summary>
 Visvalingam Whayatt simplification
 </summary>
 <param name="NumPointsToKeep">the number of points to keep in the final polygon</param>
<returns></returns>
 <remarks></remarks>
</member>
<member name="M:LifeSimGIS.PolygonFeature.NearestPolygonFromPoint(LifeSimGIS.PointD,LifeSimGIS.PointD@,System.Int32@,System.Int32@)">
 <summary>
 Calculates the distance, nearest part index, and preceeding point index of the intersecting line segment.
 </summary>
 <param name="P">The point to be tested</param>
 <param name="NearestPointOnLine">The point on the line that is closest to the test point.</param>
 <param name="PartIndex">The part index that will be returned as being the part closest to the point.</param>
 <param name="PreceedingPointIndex">The point index on the return part that is before the intersecting location of the point</param>
 <returns>Distance</returns>
 <remarks>Created 10/07/2015 by Woodrow Fields</remarks>
</member>
<member name="M:LifeSimGIS.PolygonFeature.Area">
 <summary>
 Returns the total area of the polygon feature.
 </summary>
 <returns>Total Area of Polygon Feature.</returns>
 <remarks></remarks>
</member>
<member name="M:LifeSimGIS.PolygonFeature.PointInPolygonFeature(LifeSimGIS.PointD)">
 <summary>
 A test to determine if a point is within a polygon feature.  This solution should work with concentric circles, overlapping polygons and overlapping holes
 </summary>
 <param name="Point">the point you wish to test</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:LifeSimGIS.PolygonFeature.Centroid">
 <summary>
 Returns the centroid of the polygon feature.
 </summary>
 <returns>Centroid of Polygon Feature.</returns>
 <remarks>Created 9-30-2014 by Woodrow Fields and William Lehman</remarks>
</member>
<member name="M:LifeSimGIS.PolygonFeature.Simplify(System.Double)">
 <summary>
 Douglas Peucker Simplification
 </summary>
 <param name="Tolerance">the number of units defined by the projection that you are willing to sacrifice between
  any three points where the distance is measured as the height of a normal line through point3 from a line
  connecting point1 and point 3</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:LifeSimGIS.PolygonFeature.Simplify(System.Double,System.Int32)">
 <summary>
 Lang Simplification
 </summary>
 <param name="Tolerance">a tolerance variable expressed as a minimum angle between the current point and a look ahead point</param>
 <param name="lookahead">the number of points to look ahead</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:LifeSimGIS.PolygonFeature.Simplify(System.Int32)">
 <summary>
 Visvalingam Whayatt simplification. Simplifies each polygon in the polygon feature to contain x number of points.
 </summary>
 <param name="NumPointsToKeep">the number of points to keep in the final polygon</param>
<returns></returns>
 <remarks></remarks>
</member>
<member name="M:LifeSimGIS.LineFeatures.GetNearestLinesAndIntersectingPoints(LifeSimGIS.PointFeatures,LifeSimGIS.PointD[]@,System.Double[]@)">
 <summary>
 Function gets the nearest line for each point and calculates the nearest point on the line.
 Returns an array of (i) where for each point i = closest line index.
 </summary>
 <param name="pointData">Point features to calculate from</param>
 <param name="intersectingPoints">Intersecting Point array to be returned</param>
 <param name="distances">Array of distances from the point at i to the nearest line feature</param>
 <returns>Returns an array of (i) where for each point i = closest line index.</returns>
 <remarks>Written 05/08/2014 by Woodrow Lee Fields</remarks>
</member>
<member name="M:LifeSimGIS.LineFeatures.GetNearestLineAndIntersectingPoint(LifeSimGIS.PointD,LifeSimGIS.PointD@,System.Double@)">
 <summary>
 Function gets the nearest line for each point and calculates the nearest point on the line.
 Returns an array of (i) where for each point i = closest line index.
 </summary>
 <param name="pointData">Point features to calculate from</param>
 <param name="intersectingPoint">Intersecting Point array to be returned</param>
 <param name="distance">Array of distances from the point at i to the nearest line feature</param>
 <returns>Returns an array of (i) where for each point i = closest line index.</returns>
 <remarks>Written 05/08/2014 by Woodrow Lee Fields</remarks>
</member>
<member name="M:LifeSimGIS.LineFeatures.GetNearstLinesAndPercentDistance(LifeSimGIS.PointFeatures,System.Int32[]@,System.Double[]@)">
 <summary>
 Function gets the nearest line for each point and calculates the percent distance along the line to the intersecting point.
 Returns an integer array of () where for each point = closest line index. The ByRef array = percent distance of intersecting point along the line.
 </summary>
 <param name="PointData">Point features to calculate from</param>
 <param name="percentDistances">Array of integers indicating the percent along the nearest line from line start from each point in the pointData.</param>
 <param name="distanceFromLine">Array of distances from each point to the nearest line.</param>
 <returns>array of (i) where for each point i: (i,0) = closest line index. The ByRef array = percent distance of intersecting point along the line.</returns>
 <remarks>Written 05/08/2014 by Woodrow Lee Fields</remarks>
</member>
<member name="M:LifeSimGIS.LineFeatures.Simplify(System.Double)">
 <summary>
 Douglas Peucker Simplification
 </summary>
 <param name="Tolerance">the number of units defined by the projection that you are willing to sacrifice between
  any three points where the distance is measured as the height of a normal line through point3 from a line
  connecting point1 and point 3</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:LifeSimGIS.LineFeatures.Simplify(System.Double,System.Int32)">
 <summary>
 Lang Simplification
 </summary>
 <param name="Tolerance">a tolerance variable expressed as a minimum angle between the current point and a look ahead point</param>
 <param name="lookahead">the number of points to look ahead</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:LifeSimGIS.LineFeatures.Simplify(System.Int32)">
 <summary>
 Visvalingam Whayatt simplification
 </summary>
 <param name="NumPointsToKeep">the number of points to keep in the final polygon</param>
<returns></returns>
 <remarks></remarks>
</member>
<member name="M:LifeSimGIS.PolygonFeatures.PointInPolygonFeatures(LifeSimGIS.PointD)">
 <summary>
 A function that determines if a point is in the polygon features at all. Returns true at the first feature it is within.
 </summary>
 <param name="point">the point in question</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:LifeSimGIS.PolygonFeatures.GetPolygonIndicesByPoints(LifeSimGIS.PointFeatures)">
 <summary>
 Very quickly tests for points in polygons.
 Function returns an array of integers where the array index represents each point and the values in the array represent the polygon index
 associated with each point. A value of -1 in the array means the point was not any polygon.
 </summary>
 <param name="Points">Point featurs to test.</param>
 <returns>Function returns an array of integers where the array index represents each point and the values in the array represent the polygon index associated with each point. A value of -1 in the array means the point was not any polygon.</returns>
 <remarks></remarks>
</member>
<member name="M:LifeSimGIS.PolygonFeatures.CalculateCentroids">
 <summary>
 Calculates the centroid of each polygonfeature in a polygonfeatures does not create a shapefile, does not copy the dbf or shx.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:LifeSimGIS.PolygonFeatures.Simplify(System.Double)">
 <summary>
 Douglas Peucker Simplification
 </summary>
 <param name="Tolerance">the number of units defined by the projection that you are willing to sacrifice between
  any three points where the distance is measured as the height of a normal line through point3 from a line
  connecting point1 and point 3</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:LifeSimGIS.PolygonFeatures.Simplify(System.Double,System.Int32)">
 <summary>
 Lang Simplification
 </summary>
 <param name="Tolerance">a tolerance variable expressed as a minimum angle between the current point and a look ahead point</param>
 <param name="lookahead">the number of points to look ahead</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:LifeSimGIS.PolygonFeatures.Simplify(System.Int32)">
 <summary>
 Visvalingam Whyatt simplification
 </summary>
 <param name="NumPointsToKeep">the number of points to keep in the final polygon</param>
<returns></returns>
 <remarks></remarks>
</member>
<member name="M:LifeSimGIS.PolygonFeatures.GetNearestEdgeAndIntersectingPoint(LifeSimGIS.PointD,LifeSimGIS.PointD@,System.Double@)">
 <summary>
 Function gets the nearest line for each point and calculates the nearest point on the line.
 Returns an array of (i) where for each point i = closest line index.
 </summary>
 <param name="pointData">Point features to calculate from</param>
 <param name="intersectingPoint">Intersecting Point array to be returned</param>
 <param name="distance">Array of distances from the point at i to the nearest line feature</param>
 <returns>Returns an array of (i) where for each point i = closest line index.</returns>
 <remarks>Written 05/08/2014 by Woodrow Lee Fields</remarks>
</member>
<member name="M:LifeSimGIS.Node`1.splitNode(LifeSimGIS.Node{`0},System.Int32)">
 <summary>
 Split a node. Algorithm is taken pretty much verbatim from
 Guttman's original paper.
 </summary>
 <param name="nn">new node</param>
 <returns>return new Node object.</returns>
</member>
<member name="M:LifeSimGIS.Node`1.reorganize">
 <summary>
 eliminate null entries, move all entries to the start of the source node
 </summary>
</member>
<member name="M:LifeSimGIS.RangeRTree`1.#ctor">
 <summary>
 Initialize implementation dependent properties of the RTree.
 </summary>
</member>
<member name="M:LifeSimGIS.RangeRTree`1.#ctor(System.Int32,System.Int32)">
 <summary>
 Initialize implementation dependent properties of the RTree.
 </summary>
 <param name="MaxEntriesPerNode">his specifies the maximum number of entries in a node. 
 The default value is 10, which is used if the property is not specified, or is less than 2.</param>
 <param name="MinEntriesPerNode">This specifies the minimum number of entries
in a node. The default value is half of the MaxNodeEntries value (rounded
down), which is used if the property is not specified or is less than 1.
</param>
</member>
<member name="M:LifeSimGIS.RangeRTree`1.Add(LifeSimGIS.Range{`0})">
 <summary>
 Adds an item to the spatial index
 </summary>
 <param name="r"></param>
</member>
<member name="M:LifeSimGIS.RangeRTree`1.AddNoCopy(LifeSimGIS.Range{`0})">
 <summary>
 Adds an item to the spatial index
 </summary>
 <param name="r">Rectangle to add. It will not be copied so be cautious.</param>
</member>
<member name="M:LifeSimGIS.RangeRTree`1.Add(LifeSimGIS.Range{`0},System.Int32)">
 <summary>
 Adds a new entry at a specified level in the tree
 </summary>
 <param name="r"></param>
 <param name="level"></param>
</member>
<member name="M:LifeSimGIS.Extent.#ctor(System.Double,System.Double,System.Double,System.Double)">
 <summary>
 Initializes a bounding box.
 </summary>
 <param name="xMax">Maximum horizontal value.</param>
 <param name="Xmin">Minimum horizontal value.</param>
 <param name="Ymax">Maximum vertical value.</param>
 <param name="Ymin">Minimum vertical value.</param>
 <remarks></remarks>
</member>
<member name="M:LifeSimGIS.Extent.DeltaX">
 <summary>
 Returns the difference between the maximum and minimum horizontal value.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:LifeSimGIS.Extent.DeltaY">
 <summary>
 Returns the difference between the maximum and minimum vertical value.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:LifeSimGIS.Extent.Contains(System.Double,System.Double)">
 <summary>
 Determine if a given point is within the extent.
 </summary>
 <param name="x">Horizontal value of point.</param>
 <param name="y">Vertical value of point.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:LifeSimGIS.Extent.Overlaps(LifeSimGIS.Extent)">
 <summary>
 Returns a boolean value.  If the input extent overlaps the extent then returns True, otherwise false.
 </summary>
 <param name="testExtent">The input extent to test for overlap</param>
 <returns>A boolean value representing true if the input exent overlaps the extent or false if it doesn't</returns>
 <remarks>Written 11/18/2013 by Woodrow Fields</remarks>
</member>
<member name="M:LifeSimGIS.Extent.UpdateExtent(LifeSimGIS.Extent)">
 <summary>
 Updates the extent to encompass the input extent. Returns True if extent was updated and False if not updated
 </summary>
 <param name="newExtent">Extent used to update the current extent.</param>
 <remarks></remarks>
</member>
<member name="M:LifeSimGIS.Extent.Reproject(GDALAssist.Projection,GDALAssist.Projection)">
 <summary>
 Gives an approximation of a reprojected extent from one projection to another.
 </summary>
 <param name="currentProjection">The projection of the existing extent.</param>
 <param name="newProjection">The projection of the desired extent.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:LifeSimGIS.ExtentM.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
 <summary>
 Initializes a bounding box.
 </summary>
 <param name="_MaxX">Maximum horizontal value.</param>
 <param name="_MinX">Minimum horizontal value.</param>
 <param name="_MaxY">Maximum vertical value.</param>
 <param name="_MinY">Minimum vertical value.</param>
 <param name="_MaxM">Maximum M value.</param>
 <param name="_MinM">Minimum M value.</param>
 <remarks></remarks>
</member>
<member name="M:LifeSimGIS.ExtentM.DeltaM">
 <summary>
 Returns the difference between the maximum and minimum M value.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:LifeSimGIS.ExtentZ.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
 <summary>
 Initializes a bounding box.
 </summary>
 <param name="_MaxX">Maximum horizontal value.</param>
 <param name="_MinX">Minimum horizontal value.</param>
 <param name="_MaxY">Maximum vertical value.</param>
 <param name="_MinY">Minimum vertical value.</param>
 <param name="_MaxZ">Maximum Z value.</param>
 <param name="_MinZ">Minimum Z value.</param>
 <remarks></remarks>
</member>
<member name="M:LifeSimGIS.ExtentZ.DeltaZ">
 <summary>
 Returns the difference between the maximum and minimum Z value.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:LifeSimGIS.ExtentZM.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
 <summary>
 Initializes a bounding box.
 </summary>
 <param name="MaxX">Maximum horizontal value.</param>
 <param name="MinX">Minimum horizontal value.</param>
 <param name="MaxY">Maximum vertical value.</param>
 <param name="MinY">Minimum vertical value.</param>
 <param name="_MaxZ">Maximum Z value.</param>
 <param name="_MinZ">Minimum Z value.</param>
 <param name="_MaxM">Maximum M value.</param>
 <param name="_MinM">Minimum M value.</param>
 <remarks></remarks>
</member>
<member name="M:LifeSimGIS.ExtentZM.DeltaZ">
 <summary>
 Returns the difference between the maximum and minimum Z value.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:LifeSimGIS.ExtentZM.DeltaM">
 <summary>
 Returns the difference between the maximum and minimum M value.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:LifeSimGIS.Line.#ctor(LifeSimGIS.PointD[],System.Double)">
 <summary>
 Only to be used internally when existing length is guaranteed to reduce recomputation. Also assumes that the point data doesn't need to be re-defined.
 Used in Translate and a few others.
 </summary>
 <param name="points"></param>
 <param name="existingLength"></param>
</member>
<member name="M:LifeSimGIS.Line.PerpendicularDistance(LifeSimGIS.PointD,LifeSimGIS.PointD,LifeSimGIS.PointD)">
 <summary>
 returns the length of a perpindicular line connecting c to a line connecting a and b
 </summary>
 <param name="a"></param>
 <param name="b"></param>
 <param name="c"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:LifeSimGIS.Line.GetPositionLocation(System.Single)">
 <summary>
 Returns a point on the line representing the percent distance from the start of the line.
 </summary>
 <param name="fractionPosition">Decimal value representing the position requested.  Value should be between 0 and 1.</param>
 <returns>Point on the line that is of the specified distance from the start.</returns>
 <remarks></remarks>
</member>
<member name="M:LifeSimGIS.Line.IntersectsRectangle(LifeSimGIS.Extent)">
 <summary>
 Returns a boolean value indicating whether or not the Line intersects with the input rectangle.
 </summary>
 <param name="selectionBox">Bounding box to test for intersection.</param>
 <returns>a boolean value.</returns>
 <remarks>Created 11/19/2013 by Woodrow Fields</remarks>
</member>
<member name="M:LifeSimGIS.Line.DistancePointLine(LifeSimGIS.PointD,LifeSimGIS.PointD@)">
 <summary>
 pt is the point to test.
 Returns distance and byreference closest point on the line.
 </summary>
 <param name="pt">Point to compute distance to line.</param>
 <param name="intersectingPoint">The point on the line that is closest to the test point.</param>
 <returns>Distance as a double and byreference line intersection point that is closest to the test point.</returns>
 <remarks> 
 Source for the distance implementation: http://stackoverflow.com/questions/849211/shortest-distance-between-a-point-and-a-line-segment
 Updated and edited to return more information by Woodrow Fields 10/11/2015
 </remarks>
</member>
<member name="M:LifeSimGIS.Line.DistancePointLine(LifeSimGIS.PointD,LifeSimGIS.PointD@,System.Int32@)">
 <summary>
 pt is the point to test.
 Returns the distance, and the byreference preceeding index of the line intersection point
 </summary>
 <param name="pt">Point to compute distance to line.</param>
 <param name="intersectingPoint">The point on the line that is closest to the test point.</param>
 <param name="preceedingPointIndex">The zero based index value representing the preceeding line point of the nearest location on the line to the test point.</param>
 <returns>Distance as a double and byreference preceeding index of the line intersection point</returns>
 <remarks> 
 Source for the distance implementation: http://stackoverflow.com/questions/849211/shortest-distance-between-a-point-and-a-line-segment
 Updated and edited to return more information by Woodrow Fields 10/11/2015
 </remarks>
</member>
<member name="M:LifeSimGIS.Line.DistancePointLine(LifeSimGIS.PointD,LifeSimGIS.PointD@,System.Int32@,System.Double@)">
 <summary>
 pt is the point to test.
 Returns distance and byreference fraction length along line to intersecting point.
 </summary>
 <param name="pt">Point to compute distance to line.</param>
 <param name="IntersectingPoint">The point on the line that is closest to the test point.</param>
 <param name="PreceedingPointIndex">The zero based index value representing the preceeding line point of the nearest location on the line to the test point.</param>
 <param name="FractionLength">The fraction of the length of the line where the nearest point on the line is located.</param>
 <returns>Distance and byreference fraction length along line to intersecting point</returns>
 <remarks> 
 Source for the distance implementation: http://stackoverflow.com/questions/849211/shortest-distance-between-a-point-and-a-line-segment
 Updated and edited to return more information by Woodrow Fields 10/11/2015
 </remarks>
</member>
<member name="M:LifeSimGIS.Line.IntersectsLineSegment(LifeSimGIS.PointD,LifeSimGIS.PointD,LifeSimGIS.PointD,LifeSimGIS.PointD)">
 <summary>
 Tests two line segments for intersection.        
 http://www.ahinson.com/algorithms_general/Sections/Geometry/ParametricLineIntersection.pdf
 https://social.msdn.microsoft.com/forums/vstudio/en-US/4eb3423e-eb81-4977-8ce5-5a568d53fd9b/get-the-intersection-point-of-two-lines: used response near bottom from Andrew Morton
 </summary>
 <param name="p1">First line point x value.</param>
 <param name="p2">First line point y value.</param>
 <param name="q1">Second line point x value.</param>
 <param name="q2">Second line point y value.</param>
 <returns>boolean, if intersects then true if no intersection then false.</returns>
 <remarks></remarks>
</member>
<member name="M:LifeSimGIS.ReadOnlyLine.GetPositionLocation(System.Single)">
 <summary>
 Returns a point on the line representing the percent distance from the start of the line.
 </summary>
 <param name="fractionPosition">Decimal value representing the position requested.  Value should be between 0 and 1.</param>
 <returns>Point on the line that is of the specified distance from the start.</returns>
 <remarks></remarks>
</member>
<member name="M:LifeSimGIS.ReadOnlyLine.IntersectsRectangle(LifeSimGIS.Extent)">
 <summary>
 Returns a boolean value indicating whether or not the Line intersects with the input rectangle.
 </summary>
 <param name="selectionBox">Bounding box to test for intersection.</param>
 <returns>a boolean value.</returns>
 <remarks>Created 11/19/2013 by Woodrow Fields</remarks>
</member>
<member name="M:LifeSimGIS.ReadOnlyLine.DistancePointLine(LifeSimGIS.PointD,LifeSimGIS.PointD@)">
 <summary>
 pt is the point to test.
 Returns distance and byreference closest point on the line.
 </summary>
 <param name="pt">Point to compute distance to line.</param>
 <param name="intersectingPoint">The point on the line that is closest to the test point.</param>
 <returns>Distance as a double and byreference line intersection point that is closest to the test point.</returns>
 <remarks> 
 Source for the distance implementation: http://stackoverflow.com/questions/849211/shortest-distance-between-a-point-and-a-line-segment
 Updated and edited to return more information by Woodrow Fields 10/11/2015
 </remarks>
</member>
<member name="M:LifeSimGIS.ReadOnlyLine.DistancePointLine(LifeSimGIS.PointD,LifeSimGIS.PointD@,System.Int32@)">
 <summary>
 pt is the point to test.
 Returns the distance, and the byreference preceeding index of the line intersection point
 </summary>
 <param name="pt">Point to compute distance to line.</param>
 <param name="intersectingPoint">The point on the line that is closest to the test point.</param>
 <param name="preceedingPointIndex">The zero based index value representing the preceeding line point of the nearest location on the line to the test point.</param>
 <returns>Distance as a double and byreference preceeding index of the line intersection point</returns>
 <remarks> 
 Source for the distance implementation: http://stackoverflow.com/questions/849211/shortest-distance-between-a-point-and-a-line-segment
 Updated and edited to return more information by Woodrow Fields 10/11/2015
 </remarks>
</member>
<member name="M:LifeSimGIS.ReadOnlyLine.DistancePointLine(LifeSimGIS.PointD,LifeSimGIS.PointD@,System.Int32@,System.Double@)">
 <summary>
 pt is the point to test.
 Returns distance and byreference fraction length along line to intersecting point.
 </summary>
 <param name="pt">Point to compute distance to line.</param>
 <param name="IntersectingPoint">The point on the line that is closest to the test point.</param>
 <param name="PreceedingPointIndex">The zero based index value representing the preceeding line point of the nearest location on the line to the test point.</param>
 <param name="FractionLength">The fraction of the length of the line where the nearest point on the line is located.</param>
 <returns>Distance and byreference fraction length along line to intersecting point</returns>
 <remarks> 
 Source for the distance implementation: http://stackoverflow.com/questions/849211/shortest-distance-between-a-point-and-a-line-segment
 Updated and edited to return more information by Woodrow Fields 10/11/2015
 </remarks>
</member>
<member name="M:LifeSimGIS.PointD.#ctor(System.Double,System.Double)">
 <summary>
 Represents a single geometric point in memory.
 </summary>
 <param name="xValue">The horizontal position of the point.</param>
 <param name="yValue">The vertical position of the point.</param>
 <remarks></remarks>
</member>
<member name="M:LifeSimGIS.PointM.#ctor(System.Double,System.Double,System.Double)">
 <summary>
 Represents a single geometric point in memory.
 </summary>
 <param name="_X">The horizontal position of the point.</param>
 <param name="_Y">The vertical position of the point.</param>
 <param name="_M">The M attribute of the point. Often set as time.</param>
 <remarks></remarks>
</member>
<member name="M:LifeSimGIS.PointZ.#ctor(System.Double,System.Double,System.Double)">
 <summary>
 Represents a single geometric point in memory.
 </summary>
 <param name="_X">The horizontal position of the point.</param>
 <param name="_Y">The vertical position of the point.</param>
 <param name="_Z">The Z attribute of the point. Often set as elevation.</param>
 <remarks></remarks>
</member>
<member name="M:LifeSimGIS.PointZM.#ctor(System.Double,System.Double,System.Double,System.Double)">
 <summary>
 Represents a single geometric point in memory.
 </summary>
 <param name="_X">The horizontal position of the point.</param>
 <param name="_Y">The vertical position of the point.</param>
 <param name="_Z">The Z attribute of the point. Often set as elevation.</param>
 <param name="_M">The M attribute of the point. Often set as time.</param>
 <remarks></remarks>
</member>
<member name="M:LifeSimGIS.Polygon.ComputeOrientation">
 <summary>
 Determines the Orientation of polygon points where true = clockwise and false = counter-clockwise (hole).
 </summary>
 <remarks>Created 10-16-2013 by Woodrow Fields</remarks>
</member>
<member name="M:LifeSimGIS.Polygon.ComputeArea">
 <summary>
 Function to calculate the area of a simple polygon.
 http://alienryderflex.com/polygon_area/
 </summary>
 <remarks>Created 10-22-2013 by Woodrow Fields</remarks>
</member>
<member name="M:LifeSimGIS.Polygon.PointInPolygon(LifeSimGIS.PointD)">
 <summary>
 Simple point in polygon test to determine if the given point lies within the polygon.
 </summary>
 <param name="P">Point to test.</param>
 <returns>boolean value where true means in polygon and false means outside of polygon.</returns>
 <remarks>Created 10-16-2013 by Woodrow Fields |updated 10-23-2013 WPL</remarks>
</member>
<member name="M:LifeSimGIS.Polygon.PointInPolygon(System.Double,System.Double)">
 <summary>
 Simple point in polygon test to determine if the given x and y lies within the polygon
 </summary>
 <param name="x">x value as double</param>
 <param name="y">value as double</param>
 <returns>boolean value where true means in polygon and false means outside of polygon</returns>
 <remarks>created 10-23-1</remarks>
</member>
<member name="M:LifeSimGIS.Polygon.PolygonCentroid">
 <summary>
 Function to calculate the centroid of a simple polygon.
 </summary>
 <returns>Centroid of a polygon.</returns>
 <remarks>Created 9-30-2014 by Woodrow Fields and William Lehman</remarks>
</member>
<member name="M:LifeSimGIS.GeoPackageWriter.AddSrs(GDALAssist.Projection)">
 <summary>
 Attempts to add a new projection to the GeoPackage table 'gpkg_spatial_ref_sys' and returns the srs_id of the projection.
 </summary>
 <param name="Proj">Projection to be added.</param>
 <returns>the SRS_ID of the projection in the geopackage file.</returns>
 <remarks></remarks>
</member>
<member name="M:LifeSimGIS.ShapefileReader.SRecordList(System.Byte[])">
 <summary>
 Returns an array of the byte locations for each record in a shapefile (.shp).
 </summary>
 <param name="bytes">byte array of the .shx file.</param>
 <returns>Array of byte locations in the .shp file.</returns>
 <remarks></remarks>
</member>
</members>
</doc>

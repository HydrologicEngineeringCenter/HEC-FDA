name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

env:
  Project_Name: HEC.FDA.View/HEC.FDA.View.csproj

jobs:
  CI:
    runs-on: windows-latest                         
    env:
      Solution_Name: Fda.sln                                  
      dotnet-version: '9.0.x'

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup .NET Core SDK ${{ env.dotnet-version }}
      uses: actions/setup-dotnet@v4
      with:
          dotnet-version: ${{ env.dotnet-version }} 
    - name: Configure NuGet private feed credentials
    # This step updates the ras-nuget-private source with credentials
      run: dotnet nuget update source ras-nuget-private --username "${{ secrets.HEC_NEXUS_READ_UID }}" --password "${{ secrets.HEC_NEXUS_READ_PASSWORD }}" --store-password-in-clear-text --configfile nuget.config

    - name: Download and unzip file
      shell: pwsh
      run: |
        $PUBLISH_OUT = "${pwd}/TO-PACKAGE/"
        echo "PUBLISH_OUT=$PUBLISH_OUT" >> $env:GITHUB_ENV
        echo "RAS_GDAL=$PUBLISH_OUT" >> $env:GITHUB_ENV
        $zipUrl = "https://s3.hecdev.net/ras-public-data/ras-GDAL-3.9.1.zip"
        $zipPath = "${pwd}/downloaded.zip"
        Invoke-WebRequest -Uri $zipUrl -OutFile $zipPath
        Expand-Archive -Path $zipPath -DestinationPath ${{ env.PUBLISH_OUT }}

    - name: Create version number
      shell: pwsh
      run: |
        $VERSION = "2.1.0.${{ github. run_number }}-Beta"
        echo "VERSION=$VERSION" >> $env:GITHUB_ENV

    - name: Test Solution
      run: dotnet test --nologo --filter RunsOn=Remote -c Release
      
    - name: Publish
      shell: pwsh
      run: |
        dotnet publish -c Release -v quiet /p:Version=${{ env.VERSION }} -o $PUBLISH_OUT ${{ env.PROJECT_NAME }} --self-contained true
      
    - name: Download and unzip file
      shell: pwsh
      run: |
        $zipUrl = "https://s3.hecdev.net/ras-public-data/ras-GDAL-3.9.1.zip"
        $zipPath = "${pwd}/downloaded.zip"
        Invoke-WebRequest -Uri $zipUrl -OutFile $zipPath
        Expand-Archive -Path $zipPath -DestinationPath ${{ env.PUBLISH_OUT }}

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: HEC-FDA-${{ env.VERSION }}
        path: ${{ env.PUBLISH_OUT }}


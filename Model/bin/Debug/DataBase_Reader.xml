<?xml version="1.0"?>
<doc>
<assembly>
<name>
DataBase_Reader
</name>
</assembly>
<members>
<member name="T:DataBase_Reader.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:DataBase_Reader.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:DataBase_Reader.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="M:DataBase_Reader.DatabaseReader.IsNumericType(System.Type)">
 <summary>
 Determines if a type is numeric.  Nullable numeric types are considered numeric.
 </summary>
 <remarks>
 Boolean is not considered numeric.
 http://stackoverflow.com/questions/124411/using-net-how-can-i-determine-if-a-type-is-a-numeric-valuetype
 </remarks>
</member>
<member name="M:DataBase_Reader.DataTableView.GetColumn(System.Int32)">
 <summary>
     returns a specified field of data from the data table as an array of the column type.
 </summary>
 <param name="columnIndex">Column index of the desired data.</param>
 <returns>A one-dimensional array of the column type.</returns>
 <remarks></remarks>
</member>
<member name="M:DataBase_Reader.DataTableView.GetColumn(System.String)">
 <summary>
     returns a specified field of data from the data table as an array of the column type.
 </summary>
 <param name="columnName">Name of the desired column of data.</param>
 <returns>A one-dimensional array of the column type.</returns>
 <remarks></remarks>
</member>
<member name="M:DataBase_Reader.DataTableView.GetStoredColumn(System.Int32)">
 <summary>
     returns a specified field of data from the data table as an array of the column type.
 </summary>
 <param name="storedColumnIndex">Column index of the desired data.</param>
 <returns>A one-dimensional array of the column type.</returns>
 <remarks>Written 9/8/2012 by Woodrow Lee Fields.</remarks>
</member>
<member name="M:DataBase_Reader.DataTableView.GetStoredColumn(System.String)">
 <summary>
     returns a specified field of data from the data table as an array of the column type.
 </summary>
 <param name="storedColumnName">Name of the desired column of data.</param>
 <returns>A one-dimensional array of the column type.</returns>
 <remarks>Written 9/8/2012 by Woodrow Lee Fields.</remarks>
</member>
<member name="M:DataBase_Reader.DataTableView.ExportToCsv(System.String,System.Int32[],System.Int32[])">
 <summary>
     Exports a data table to a comma delimited text file.
 </summary>
 <param name="filePath">Output file path</param>
 <param name="rowIndicesToExport">Which rows to export as row indices</param>
 <param name="columnIndicesToExport">Which columns to export as column indices</param>
 <remarks></remarks>
</member>
<member name="M:DataBase_Reader.DataTableView.ExportToXlsx(System.String,System.Int32[],System.Int32[])">
 <summary>
     Exports the contents of a DataTable to an excel spreadsheet.
     FilePath must have an .xlsx or .xls extension.
     The name of the excel worksheet will be the name of the supplied DataTable
 </summary>
</member>
</members>
</doc>

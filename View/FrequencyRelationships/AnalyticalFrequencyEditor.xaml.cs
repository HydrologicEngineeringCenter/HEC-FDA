
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace Fda.FrequencyRelationships
{
    /// <summary>
    /// Interaction logic for AnalyticalFrequencyEditor.xaml
    /// </summary>
    public partial class AnalyticalFrequencyEditor : UserControl
    {
        private bool _ClearChart = false;
        public AnalyticalFrequencyEditor()
        {
            InitializeComponent();
        }

        private void ValidationDataGrid_AutoGeneratingColumn(object sender, DataGridAutoGeneratingColumnEventArgs e)
        {
            //if (_ClearChart)
            //{
            //    Plot.Series.Clear();
            //    _ClearChart = false;

            //}
            FdaViewModel.FrequencyRelationships.AnalyticalFrequencyEditorVM vm = (FdaViewModel.FrequencyRelationships.AnalyticalFrequencyEditorVM)DataContext;
            Type RowType = typeof(FdaViewModel.FrequencyRelationships.AnalyticalFrequencyRowItem);
            System.Reflection.PropertyInfo propertyInfo = RowType.GetProperty(e.PropertyName);
            object[] Attributes = propertyInfo.GetCustomAttributes(true);
            //foreach (object attribute in Attributes)
            //{
            //    PlottableAttribute castedAttribute = attribute as PlottableAttribute;
            //    if (castedAttribute != null)
            //    {
            //        OxyPlot.Wpf.LineSeries l = new OxyPlot.Wpf.LineSeries();
            //        l.ItemsSource = vm.Items;
            //        l.DataFieldX = castedAttribute.DependantPropertyValue;
            //        l.DataFieldY = e.PropertyName;
            //        l.Title = castedAttribute.DisplayName;
            //        l.Color = (Color)ColorConverter.ConvertFromString(castedAttribute.Color);
            //        l.LineStyle = castedAttribute.LineStyle;
            //        e.Cancel = !castedAttribute.DisplayInGrid;
            //        Plot.Series.Add(l);
            //        return;
            //    }
            //}
        }

        private void DataGrid_AutoGeneratedColumns(object sender, EventArgs e)
        {
            _ClearChart = true;
            Plot.InvalidatePlot();
        }
    }
}
